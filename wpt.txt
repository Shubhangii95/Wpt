productcontroller.js:

const Product=require("../models/product");


const insertProduct=async (req,resp)=>{
   console.log(req.body);
   const prod=new Product(req.body);
   //add data in mongodb
   const savedprod=await prod.save()
   console.log("Product added")
   resp.status(200).json({status:true,message:"data added successfully",data:savedprod})

}

//find all objects
const getAllProducts=async (req,resp)=>{
    try{
    console.log("in getproducts")
    const products=await Product.find({});
    console.log(products);
    resp.status(200).json({success:true,data:products})
    }catch(err){
        resp.status(400).json({success:false,message:'not found'})
    }
    
}
                                    
//retrieve one product object
const getByPid=async (req,resp)=>{
    try{
    const pid=req.params.pid;
    const product=await Product.findOne({pid});
    resp.status(200).json({success:true,data:product})
    }catch(err){
        resp.status(400).json({success:false,message:"product not found"})
    }

}

//update product in mongodb and then go back getproducts
const updateProduct=async (req,resp)=>{
    try{
        const pid=req.body.pid;
        const updatedprod=await Product.findOneAndUpdate({pid},req.body)
        resp.status(200).json({success:true,message:"updated successfully",data:updatedprod})
    }catch(err){
        resp.status(400).json({success:false,message:"not found"})
    }
     
}

const deleteproduct=async (req,resp)=>{
     const pid=req.params.pid;
     //delete product
    const deleteprod= await Product.findOneAndDelete({pid},req.body)
    resp.status(200).json({success:true,message:"deleted successfully",data:deleteprod})
}

module.exports={insertProduct,getAllProducts,getByPid,updateProduct,deleteproduct}



mydatabase.js:

const mongoose=require("mongoose")
const mongoUrl="mongodb://127.0.0.1:27017/authdb";
mongoose.connect(mongoUrl);
const db=mongoose.connection;
db.on("connected",()=>{
    console.log("connected to mongodbserver")
})

db.on("error",(err)=>{
    console.log("error occured",err);
})

db.on("disconnected",()=>{
    console.log("disconnected from mongodbserver")
})
module.exports=db;



models:
product.js:

const mongoose=require("mongoose");
const productSchema=new mongoose.Schema({
    pid:{type:Number,required:true,unique:true},
    pname:{type:String,required:true},
    qty:{type:Number,required:true},
    price:{type:Number,required:true},
    mfgdate:{type:Date,default:Date.now()},
    expdate:{type:Date,required:true},
    instock:{type:String,required:true}
})

module.exports=mongoose.model("Product",productSchema)



routes:
productroutes.js:
const express=require("express");
const router=express.Router();
const prodcontroller=require("../controller/productcontroller");

router.use(express.json())
//read all products
router.get("/products",prodcontroller.getAllProducts)

//add a product
router.post("/products/:pid",prodcontroller.insertProduct)

//read one product 
router.get("/products/:pid",prodcontroller.getByPid)

//update one product
router.put("/products/:pid",prodcontroller.updateProduct)

//delete the product
router.delete("/products/:pid",prodcontroller.deleteproduct)

module.exports=router;



app.js:
//import all libraries
const express=require("express")
const app=express()
const bodyparser=require('body-parser')
const path=require("path")
const proutes=require('./routes/productroutes');
//to do the connection add following line
const db=require('./db/mydatabase');
const cors=require('cors');
app.use(cors())
//write url specific middlewares
app.use("/api/product",proutes)
//start the server
app.listen(4001,()=>{
    console.log("server started at port 4001")
})


Steps to create a nodejs project

npm init
npm install
npm install express
npm install mongoose
npm install nodemon
npm install cors


Que1.html:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sell My Bike</title>
    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
        }
        .form-container {
            width: 300px;
            border: 2px solid black;
            padding: 20px;
            margin: 50px auto;
        }
        .form-container h2 {
            text-align: center;
        }
        label {
            display: inline-block;
            width: 100px;
            margin-bottom: 10px;
        }
        input[type="text"],
        select,
        textarea {
            width: 150px;
            margin-bottom: 10px;
        }
        textarea {
            height: 50px;
        }
        .checkbox {
            margin-left: 105px;
            margin-bottom: 10px;
        }
        .submit-btn {
            display: block;
            margin: 0 auto;
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h2>Sell Bike.....</h2>
        <form action="#" method="post">
            <label for="ownerName">Owner Name:</label>
            <input type="text" id="ownerName" name="ownerName" maxlength="20" required><br>

            <label for="bikeName">Bike Name:</label>
            <select id="bikeName" name="bikeName" required onchange="populateColors()">
                <option>Select name</option>
                <option>Honda</option>
                <option>Yamaha</option>
                <option>Bajaj</option>
                <option>TVS</option>
            </select><br>

            <label for="color">Color:</label>
            <select id="color" name="color" required>
                <option>Select Color</option>
                <option>Red</option>
                <option>Black</option>
                <option>Blue</option>
                <option>White</option>
            </select><br>

            <label for="description">Description</label>
            <textarea id="description" name="description" required></textarea><br>

            <label for="cost">Selling Cost:</label>
            <input type="text" id="cost" name="cost" required min="1"><br>

            <div class="checkbox">
                <label for="negotiable">Negotiable</label>
                <input type="checkbox" id="negotiable" name="negotiable">

            </div>
            <input class="submit-btn" type="submit" value="submit">

        </form>

        <script>
            function populateColors() {
                const bike = document.getElementById("bikeName").value;
                const colorSelect = document.getElementById("color");
                const colorOptions = {
                    "Activa" : ["Black", "Silver", "Red"],
                    "Jupitor" : ["Gold", "Silver", "Yellow"],
                    "Bajaj Scooter" : ["Blue", "Red", "White","Black"]

                };
                colorSelect.innerHTML = "";
                if(colorOptions[bike]) {
                    
                }
            }
        </script>
    </div>
</body>
</html>


que1wpt.txt:

<!DOCTYPE html>
<html>
<head>
  <title>Sell Your Bike</title>
  <style>
    label { display: block; margin-top: 10px; }
    .error { color: red; }
    #result { margin-top: 20px; border-top: 1px solid #ccc; padding-top: 10px; }
  </style>
</head>
<body>

  <h2>Bike Seller Form</h2>

  <form id="bikeForm">
    <label>Owner Name:
      <input type="text" id="ownerName" maxlength="20" required />
    </label>

    <label>Bike Name:
      <select id="bikeName" required onchange="populateColors()">
        <option value="">Select</option>
        <option value="Activa">Activa</option>
        <option value="Jupitor">Jupitor</option>
        <option value="Bajaj Scooter">Bajaj Scooter</option>
      </select>
    </label>

    <label>Color:
      <select id="color" required></select>
    </label>

    <label>Selling Cost:
      <input type="number" id="cost" required min="1" />
    </label>

    <label>Negotiable:
      <input type="checkbox" id="negotiable" />
    </label>

    <button type="button" onclick="validateForm()">Submit</button>
    <p class="error" id="errorMsg"></p>
  </form>

  <div id="result"></div>

  <script>
    function populateColors() {
      const bike = document.getElementById("bikeName").value;
      const colorSelect = document.getElementById("color");
      const colorOptions = {
        "Activa": ["Black", "Silver", "Red"],
        "Jupitor": ["Gold", "Silver", "Yellow"],
        "Bajaj Scooter": ["Blue", "Red", "White", "Black"]
      };
      colorSelect.innerHTML = "";
      if (colorOptions[bike]) {
        colorOptions[bike].forEach(color => {
          const opt = document.createElement("option");
          opt.text = color;
          opt.value = color;
          colorSelect.add(opt);
        });
      }
    }

    function validateForm() {
      const ownerName = document.getElementById("ownerName").value.trim();
      const bikeName = document.getElementById("bikeName").value;
      const color = document.getElementById("color").value;
      const cost = document.getElementById("cost").value;
      const negotiable = document.getElementById("negotiable").checked;
      const errorMsg = document.getElementById("errorMsg");
      errorMsg.innerText = "";

      // Validations
      if (!ownerName || !bikeName || !color || !cost) {
        errorMsg.innerText = "Please fill in all mandatory fields.";
        return;
      }
      if (ownerName.length > 20) {
        errorMsg.innerText = "Owner name must not exceed 20 characters.";
        return;
      }
      if (parseFloat(cost) <= 0) {
        errorMsg.innerText = "Selling cost must be a positive number.";
        return;
      }

      // If all good, display the data
      const result = `
        <h3>Submitted Data</h3>
        <p><strong>Owner Name:</strong> ${ownerName}</p>
        <p><strong>Bike Name:</strong> ${bikeName}</p>
        <p><strong>Color:</strong> ${color}</p>
        <p><strong>Selling Cost:</strong> ₹${cost}</p>
        <p><strong>Negotiable:</strong> ${negotiable ? "Yes" : "No"}</p>
      `;
      document.getElementById("result").innerHTML = result;
    }
  </script>

</body>
</html>
